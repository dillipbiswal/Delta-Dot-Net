@model MaintenanceWindowModel
           
<div id="maintwindowedit-container">
    @using (Html.BeginForm())
    {
        <div id="form-errors-container">
            <ul>
            </ul>
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ParentId)
        <table>
            <tr>
                <td class="form-label">
                    Schedule Maintenance to Begin on:
                </td>
                <td>
                    @Html.TextBoxFor(x => x.BeginDate, new { @class = "required", @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td class="form-label">
                    Schedule Maintenance to End on:
                </td>
                <td>
                    @Html.TextBoxFor(x => x.EndDate, new { @class = "required", @readonly = "readonly" })
                </td>
            </tr>
        </table>
    }
</div>
<script type="text/javascript">
    $(function () {
        $('#BeginDate').datetimepicker({
            ampm: true,
            minDate: 0,
            maxDate: 30,
            timeFormat: 'h:mm:ss TT',
            dateFormat: 'm/dd/yy',
            onClose: function (dateText, inst) {
                var endDateTextBox = $('#EndDate');
                if (endDateTextBox.val() != '') {
                    var testStartDate = new Date(dateText);
                    var testEndDate = new Date(endDateTextBox.val());
                    if (testStartDate > testEndDate)
                        endDateTextBox.val(dateText);
                }
                else {
                    endDateTextBox.val(dateText);
                }
            },
            onSelect: function (selectedDateTime) {
                var start = $(this).datetimepicker('getDate');
                $('#EndDate').datetimepicker('option', 'minDate', new Date(start.getTime()));
            }
        });
        $('#EndDate').datetimepicker({
            ampm: true,
            minDate: 0,
            maxDate: 30,
            timeFormat: 'h:mm:ss TT',
            dateFormat: 'm/dd/yy',
            onClose: function (dateText, inst) {
                var startDateTextBox = $('#BeginDate');
                if (startDateTextBox.val() != '') {
                    var testStartDate = new Date(startDateTextBox.val());
                    var testEndDate = new Date(dateText);
                    if (testStartDate > testEndDate)
                        startDateTextBox.val(dateText);
                }
                else {
                    startDateTextBox.val(dateText);
                }
            },
            onSelect: function (selectedDateTime) {
                var end = $(this).datetimepicker('getDate');
                $('#BeginDate').datetimepicker('option', 'maxDate', new Date(end.getTime()));
            }
        });
    });
</script>
